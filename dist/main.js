(()=>{"use strict";var __webpack_modules__={365:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n  --primary-color: #2c3e50;\n  --secondary-color: #4a6eaf;\n}\n\n.light-theme {\n  --primary-color: #f9f9f9;\n  --text-color: #2c3e50;\n}\n\n.dark-theme {\n  --primary-color: #2c3e50; /* Dark Background */\n  --text-color: #f9f9f9; /* Light Text */\n}\n\n* {\n  font-family: \'Inter\';\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  background-color: var(--text-color);\n  color: var(--primary-color);\n  transition: background-color 0.3s ease, color 0.3s ease;\n}\n\n#projectSubmitBtn,\nbutton[type=\'submit\'] {\n  background-color: var(--text-color);\n  color: var(--primary-color);\n}\n\nbutton[type=\'submit\']:hover {\n  color: var(--text-color);\n}\n\nh3 {\n  margin-left: 1rem;\n}\n\ninput,\ntextarea,\nselect,\nbutton {\n  border: 1px solid black;\n  font: inherit;\n  padding: 5px;\n}\n\ninput {\n  border: 2px solid #ccc; /* Light border */\n  border-radius: 8px; /* Rounded corners */\n  font-size: 16px;\n}\n\nbutton {\n  display: inline-block;\n  padding: 10px 20px;\n  font-size: 16px;\n  font-weight: bold;\n  color: var(--text-color);\n  background-color: var(--primary-color); /* Primary blue */\n  border: none;\n  border-radius: 8px; /* Rounded corners */\n  cursor: pointer;\n  transition: all 0.3s ease; /* Smooth transitions */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Subtle shadow */\n}\n\n/* Hover effect */\nbutton:hover {\n  background-color: var(--primary-color); /* Darker blue on hover */\n  transform: translateY(-2px); /* Subtle lift */\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15); /* Stronger shadow */\n}\n\n/* Active effect */\nbutton:active {\n  transform: translateY(0); /* Reset lift */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Reset shadow */\n  background-color: var(--primary-color); /* Even darker blue */\n}\n\nbutton:disabled {\n  background-color: #c0c0c0; /* Gray for disabled buttons */\n  color: #6c757d; /* Muted text */\n  cursor: not-allowed;\n  box-shadow: none; /* Remove shadow */\n}\n\ninput[required]:invalid {\n  border-color: red;\n}\n\ninput[required]:valid {\n  border-color: green;\n}\n\n.container {\n  display: flex;\n  flex-grow: 1;\n  background-color: var(--text-color);\n}\n\n.buttons-container,\n.website-buttons-container {\n  display: flex;\n  flex-direction: row;\n  margin-left: auto;\n}\n\n.website-buttons-container {\n  margin-top: auto;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  gap: 10px;\n}\n\n.buttons-container {\n  background-color: rgba(255, 255, 255, 0.5);\n  width: fit-content;\n  padding: 2px;\n  border-radius: 4px;\n}\n\n#close-button,\n.delete-button,\n.edit-button,\n.clear-storage-button,\n.dark-light-theme-button {\n  display: flex;\n  height: 25px;\n  width: auto;\n  cursor: pointer;\n}\n\n.edit-button {\n  height: 25px;\n  width: 25px;\n}\n\n#close-button,\n.edit-button {\n  margin-left: auto;\n}\n\nselect {\n  padding: 10px 20px; /* Padding inside the dropdown */\n  background-color: #fff; /* White background for the select */\n  border: 2px solid #ccc; /* Light border */\n  border-radius: 8px; /* Rounded corners */\n  font-size: 16px; /* Slightly larger font size */\n  appearance: auto; /* Use default dropdown arrow */\n  outline: none; /* Remove focus outline */\n  cursor: pointer; /* Pointer cursor on hover */\n  transition: border-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transition effects */\n}\n\n/* Hover effect on the select dropdown */\nselect:hover {\n  border-color: #0066cc; /* Change border color on hover */\n}\n\n/* Focus effect on the select dropdown */\nselect:focus {\n  border-color: #0066cc; /* Highlight the border when focused */\n  box-shadow: 0 0 5px rgba(0, 102, 204, 0.3); /* Add subtle glow */\n}\n\n/* Styling the options inside the select */\nselect option {\n  padding: 10px; /* Padding inside each option */\n  font-size: 16px; /* Same font size as the select for consistency */\n  border: none; /* Remove borders around options */\n}\n\n/* Hover effect for options */\nselect option:hover {\n  background-color: var(--primary-color); /* Light background on hover */\n}\n\n.delete-button,\n.edit-button,\n.clear-storage-button,\n.dark-light-theme-button {\n  background-color: transparent; /* Transparent background */\n  border: none; /* No border */\n  cursor: pointer; /* Pointer cursor on hover */\n  transition: transform 0.3s ease, fill 0.3s ease; /* Smooth hover effect */\n}\n\n/* Hover effect */\n.delete-button:hover,\n.delete-project-button:hover,\n.edit-button:hover,\n.clear-storage-button:hover,\n.dark-light-theme-button:hover {\n  transform: scale(1.2); /* Slightly scale up the icon */\n  fill: #ff4d4d; /* Change color to red on hover */\n}\n\n.edit-button:hover {\n  transform: scale(1.1);\n}\n\n/* Active state (when button is clicked) */\n.delete-button:active,\n.delete-project-button:active,\n.edit-button:active,\n.clear-storage-button:active,\n.dark-light-theme-button:active {\n  transform: scale(0.95); /* Scale down the icon to give a click effect */\n  fill: #d43f3a; /* Darker red color when clicked */\n}\n\n.delete-button path {\n  transition: fill 0.3s ease;\n}\n\n#projectTitle {\n  font-weight: bold;\n}\n\n#sidebar {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  width: 15vw;\n  height: 100%;\n  background-color: var(--secondary-color);\n}\n\n#content {\n  display: flex;\n  flex-direction: column;\n  width: 85vw;\n  height: 100%;\n}\n\n.taskItem {\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  padding: 10px;\n  margin: 10px 0;\n  background-color: #f9f9f9;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  min-height: 150px;\n}\n\n#tasksContainer {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(4, auto);\n  gap: 10px;\n  padding: 10px;\n}\n\n.sidebar-item {\n  margin-left: 1rem;\n  margin-top: 1rem;\n}\n\n.project-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin: 5px 0;\n  width: 100%;\n}\n\n.delete-project-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n  margin-left: 10px;\n  cursor: pointer;\n  opacity: 0.7;\n  transition: opacity 0.2s ease;\n}\n\n.delete-project-button:hover {\n  opacity: 1;\n}\n\n#form,\n#projectForm,\n#confirmation-form {\n  display: none;\n  position: fixed;\n  gap: 7px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 20px;\n  background-color: var(--primary-color);\n  color: var(--text-color);\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n}\n\n#popup-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(5px);\n  display: none;\n  z-index: 999;\n  transition: opacity 0.3s ease;\n}\n\n#projectsSidebarContainer {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\nfooter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--primary-color);\n  color: var(--text-color);\n  font-weight: bold;\n  padding: 10px 0;\n}\n`, "",{"version":3,"sources":["webpack://./src/styles.css"],"names":[],"mappings":"AAAA;EACE,wBAAwB;EACxB,0BAA0B;AAC5B;;AAEA;EACE,wBAAwB;EACxB,qBAAqB;AACvB;;AAEA;EACE,wBAAwB,EAAE,oBAAoB;EAC9C,qBAAqB,EAAE,eAAe;AACxC;;AAEA;EACE,oBAAoB;EACpB,sBAAsB;AACxB;;AAEA;;EAEE,SAAS;EACT,UAAU;EACV,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mCAAmC;EACnC,2BAA2B;EAC3B,uDAAuD;AACzD;;AAEA;;EAEE,mCAAmC;EACnC,2BAA2B;AAC7B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;;;;EAIE,uBAAuB;EACvB,aAAa;EACb,YAAY;AACd;;AAEA;EACE,sBAAsB,EAAE,iBAAiB;EACzC,kBAAkB,EAAE,oBAAoB;EACxC,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;EACjB,wBAAwB;EACxB,sCAAsC,EAAE,iBAAiB;EACzD,YAAY;EACZ,kBAAkB,EAAE,oBAAoB;EACxC,eAAe;EACf,yBAAyB,EAAE,uBAAuB;EAClD,wCAAwC,EAAE,kBAAkB;AAC9D;;AAEA,iBAAiB;AACjB;EACE,sCAAsC,EAAE,yBAAyB;EACjE,2BAA2B,EAAE,gBAAgB;EAC7C,0CAA0C,EAAE,oBAAoB;AAClE;;AAEA,kBAAkB;AAClB;EACE,wBAAwB,EAAE,eAAe;EACzC,wCAAwC,EAAE,iBAAiB;EAC3D,sCAAsC,EAAE,qBAAqB;AAC/D;;AAEA;EACE,yBAAyB,EAAE,8BAA8B;EACzD,cAAc,EAAE,eAAe;EAC/B,mBAAmB;EACnB,gBAAgB,EAAE,kBAAkB;AACtC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,mCAAmC;AACrC;;AAEA;;EAEE,aAAa;EACb,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,0CAA0C;EAC1C,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;;;;;EAKE,aAAa;EACb,YAAY;EACZ,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;;EAEE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB,EAAE,gCAAgC;EACpD,sBAAsB,EAAE,oCAAoC;EAC5D,sBAAsB,EAAE,iBAAiB;EACzC,kBAAkB,EAAE,oBAAoB;EACxC,eAAe,EAAE,8BAA8B;EAC/C,gBAAgB,EAAE,+BAA+B;EACjD,aAAa,EAAE,yBAAyB;EACxC,eAAe,EAAE,4BAA4B;EAC7C,wDAAwD,EAAE,8BAA8B;AAC1F;;AAEA,wCAAwC;AACxC;EACE,qBAAqB,EAAE,iCAAiC;AAC1D;;AAEA,wCAAwC;AACxC;EACE,qBAAqB,EAAE,sCAAsC;EAC7D,0CAA0C,EAAE,oBAAoB;AAClE;;AAEA,0CAA0C;AAC1C;EACE,aAAa,EAAE,+BAA+B;EAC9C,eAAe,EAAE,iDAAiD;EAClE,YAAY,EAAE,kCAAkC;AAClD;;AAEA,6BAA6B;AAC7B;EACE,sCAAsC,EAAE,8BAA8B;AACxE;;AAEA;;;;EAIE,6BAA6B,EAAE,2BAA2B;EAC1D,YAAY,EAAE,cAAc;EAC5B,eAAe,EAAE,4BAA4B;EAC7C,+CAA+C,EAAE,wBAAwB;AAC3E;;AAEA,iBAAiB;AACjB;;;;;EAKE,qBAAqB,EAAE,+BAA+B;EACtD,aAAa,EAAE,iCAAiC;AAClD;;AAEA;EACE,qBAAqB;AACvB;;AAEA,0CAA0C;AAC1C;;;;;EAKE,sBAAsB,EAAE,+CAA+C;EACvE,aAAa,EAAE,kCAAkC;AACnD;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,2BAA2B;EAC3B,WAAW;EACX,YAAY;EACZ,wCAAwC;AAC1C;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,aAAa;EACb,cAAc;EACd,yBAAyB;EACzB,wCAAwC;EACxC,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,mCAAmC;EACnC,SAAS;EACT,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,eAAe;EACf,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,UAAU;AACZ;;AAEA;;;EAGE,aAAa;EACb,eAAe;EACf,QAAQ;EACR,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,aAAa;EACb,sCAAsC;EACtC,wBAAwB;EACxB,sBAAsB;EACtB,kBAAkB;EAClB,yCAAyC;EACzC,aAAa;EACb,UAAU;EACV,oCAAoC;AACtC;;AAEA;EACE,eAAe;EACf,MAAM;EACN,OAAO;EACP,WAAW;EACX,YAAY;EACZ,oCAAoC;EACpC,0BAA0B;EAC1B,aAAa;EACb,YAAY;EACZ,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,sCAAsC;EACtC,wBAAwB;EACxB,iBAAiB;EACjB,eAAe;AACjB","sourcesContent":[":root {\\n  --primary-color: #2c3e50;\\n  --secondary-color: #4a6eaf;\\n}\\n\\n.light-theme {\\n  --primary-color: #f9f9f9;\\n  --text-color: #2c3e50;\\n}\\n\\n.dark-theme {\\n  --primary-color: #2c3e50; /* Dark Background */\\n  --text-color: #f9f9f9; /* Light Text */\\n}\\n\\n* {\\n  font-family: \'Inter\';\\n  box-sizing: border-box;\\n}\\n\\nhtml,\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  height: 100%;\\n}\\n\\nbody {\\n  display: flex;\\n  flex-direction: column;\\n  background-color: var(--text-color);\\n  color: var(--primary-color);\\n  transition: background-color 0.3s ease, color 0.3s ease;\\n}\\n\\n#projectSubmitBtn,\\nbutton[type=\'submit\'] {\\n  background-color: var(--text-color);\\n  color: var(--primary-color);\\n}\\n\\nbutton[type=\'submit\']:hover {\\n  color: var(--text-color);\\n}\\n\\nh3 {\\n  margin-left: 1rem;\\n}\\n\\ninput,\\ntextarea,\\nselect,\\nbutton {\\n  border: 1px solid black;\\n  font: inherit;\\n  padding: 5px;\\n}\\n\\ninput {\\n  border: 2px solid #ccc; /* Light border */\\n  border-radius: 8px; /* Rounded corners */\\n  font-size: 16px;\\n}\\n\\nbutton {\\n  display: inline-block;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  font-weight: bold;\\n  color: var(--text-color);\\n  background-color: var(--primary-color); /* Primary blue */\\n  border: none;\\n  border-radius: 8px; /* Rounded corners */\\n  cursor: pointer;\\n  transition: all 0.3s ease; /* Smooth transitions */\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Subtle shadow */\\n}\\n\\n/* Hover effect */\\nbutton:hover {\\n  background-color: var(--primary-color); /* Darker blue on hover */\\n  transform: translateY(-2px); /* Subtle lift */\\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15); /* Stronger shadow */\\n}\\n\\n/* Active effect */\\nbutton:active {\\n  transform: translateY(0); /* Reset lift */\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Reset shadow */\\n  background-color: var(--primary-color); /* Even darker blue */\\n}\\n\\nbutton:disabled {\\n  background-color: #c0c0c0; /* Gray for disabled buttons */\\n  color: #6c757d; /* Muted text */\\n  cursor: not-allowed;\\n  box-shadow: none; /* Remove shadow */\\n}\\n\\ninput[required]:invalid {\\n  border-color: red;\\n}\\n\\ninput[required]:valid {\\n  border-color: green;\\n}\\n\\n.container {\\n  display: flex;\\n  flex-grow: 1;\\n  background-color: var(--text-color);\\n}\\n\\n.buttons-container,\\n.website-buttons-container {\\n  display: flex;\\n  flex-direction: row;\\n  margin-left: auto;\\n}\\n\\n.website-buttons-container {\\n  margin-top: auto;\\n  margin-bottom: 1rem;\\n  margin-right: 1rem;\\n  gap: 10px;\\n}\\n\\n.buttons-container {\\n  background-color: rgba(255, 255, 255, 0.5);\\n  width: fit-content;\\n  padding: 2px;\\n  border-radius: 4px;\\n}\\n\\n#close-button,\\n.delete-button,\\n.edit-button,\\n.clear-storage-button,\\n.dark-light-theme-button {\\n  display: flex;\\n  height: 25px;\\n  width: auto;\\n  cursor: pointer;\\n}\\n\\n.edit-button {\\n  height: 25px;\\n  width: 25px;\\n}\\n\\n#close-button,\\n.edit-button {\\n  margin-left: auto;\\n}\\n\\nselect {\\n  padding: 10px 20px; /* Padding inside the dropdown */\\n  background-color: #fff; /* White background for the select */\\n  border: 2px solid #ccc; /* Light border */\\n  border-radius: 8px; /* Rounded corners */\\n  font-size: 16px; /* Slightly larger font size */\\n  appearance: auto; /* Use default dropdown arrow */\\n  outline: none; /* Remove focus outline */\\n  cursor: pointer; /* Pointer cursor on hover */\\n  transition: border-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transition effects */\\n}\\n\\n/* Hover effect on the select dropdown */\\nselect:hover {\\n  border-color: #0066cc; /* Change border color on hover */\\n}\\n\\n/* Focus effect on the select dropdown */\\nselect:focus {\\n  border-color: #0066cc; /* Highlight the border when focused */\\n  box-shadow: 0 0 5px rgba(0, 102, 204, 0.3); /* Add subtle glow */\\n}\\n\\n/* Styling the options inside the select */\\nselect option {\\n  padding: 10px; /* Padding inside each option */\\n  font-size: 16px; /* Same font size as the select for consistency */\\n  border: none; /* Remove borders around options */\\n}\\n\\n/* Hover effect for options */\\nselect option:hover {\\n  background-color: var(--primary-color); /* Light background on hover */\\n}\\n\\n.delete-button,\\n.edit-button,\\n.clear-storage-button,\\n.dark-light-theme-button {\\n  background-color: transparent; /* Transparent background */\\n  border: none; /* No border */\\n  cursor: pointer; /* Pointer cursor on hover */\\n  transition: transform 0.3s ease, fill 0.3s ease; /* Smooth hover effect */\\n}\\n\\n/* Hover effect */\\n.delete-button:hover,\\n.delete-project-button:hover,\\n.edit-button:hover,\\n.clear-storage-button:hover,\\n.dark-light-theme-button:hover {\\n  transform: scale(1.2); /* Slightly scale up the icon */\\n  fill: #ff4d4d; /* Change color to red on hover */\\n}\\n\\n.edit-button:hover {\\n  transform: scale(1.1);\\n}\\n\\n/* Active state (when button is clicked) */\\n.delete-button:active,\\n.delete-project-button:active,\\n.edit-button:active,\\n.clear-storage-button:active,\\n.dark-light-theme-button:active {\\n  transform: scale(0.95); /* Scale down the icon to give a click effect */\\n  fill: #d43f3a; /* Darker red color when clicked */\\n}\\n\\n.delete-button path {\\n  transition: fill 0.3s ease;\\n}\\n\\n#projectTitle {\\n  font-weight: bold;\\n}\\n\\n#sidebar {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: flex-start;\\n  width: 15vw;\\n  height: 100%;\\n  background-color: var(--secondary-color);\\n}\\n\\n#content {\\n  display: flex;\\n  flex-direction: column;\\n  width: 85vw;\\n  height: 100%;\\n}\\n\\n.taskItem {\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n  padding: 10px;\\n  margin: 10px 0;\\n  background-color: #f9f9f9;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  min-height: 150px;\\n}\\n\\n#tasksContainer {\\n  display: grid;\\n  grid-template-columns: repeat(4, 1fr);\\n  grid-template-rows: repeat(4, auto);\\n  gap: 10px;\\n  padding: 10px;\\n}\\n\\n.sidebar-item {\\n  margin-left: 1rem;\\n  margin-top: 1rem;\\n}\\n\\n.project-container {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  margin: 5px 0;\\n  width: 100%;\\n}\\n\\n.delete-project-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 20px;\\n  height: 20px;\\n  margin-left: 10px;\\n  cursor: pointer;\\n  opacity: 0.7;\\n  transition: opacity 0.2s ease;\\n}\\n\\n.delete-project-button:hover {\\n  opacity: 1;\\n}\\n\\n#form,\\n#projectForm,\\n#confirmation-form {\\n  display: none;\\n  position: fixed;\\n  gap: 7px;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  padding: 20px;\\n  background-color: var(--primary-color);\\n  color: var(--text-color);\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n  z-index: 1000;\\n  opacity: 0;\\n  transition: opacity 0.3s ease-in-out;\\n}\\n\\n#popup-overlay {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  backdrop-filter: blur(5px);\\n  display: none;\\n  z-index: 999;\\n  transition: opacity 0.3s ease;\\n}\\n\\n#projectsSidebarContainer {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n}\\n\\nfooter {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: var(--primary-color);\\n  color: var(--text-color);\\n  font-weight: bold;\\n  padding: 10px 0;\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///365\n')},314:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZGluLXJlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///314\n')},354:module=>{eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Rpbi1yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanM/YWYxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///354\n')},72:module=>{eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZGluLXJlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanM/MmRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///72\n')},659:module=>{eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW4tcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///659\n')},540:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZGluLXJlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanM/ZGU2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///540\n')},56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZGluLXJlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanM/ZGRjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///56\n')},825:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Rpbi1yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanM/ZTQ3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///825\n')},113:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Rpbi1yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanM/MWRkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///113\n")},326:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/styles.css\nvar styles = __webpack_require__(365);\n;// ./src/styles.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, \"head\");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(styles/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const src_styles = (styles/* default */.A && styles/* default */.A.locals ? styles/* default */.A.locals : undefined);\n\n;// ./src/assets/delete-svgrepo-com.svg\nconst delete_svgrepo_com_namespaceObject = __webpack_require__.p + \"01ec1bbeb9fba6d40e41.svg\";\n;// ./src/assets/edit-svgrepo-com.svg\nconst edit_svgrepo_com_namespaceObject = __webpack_require__.p + \"d363960aa104ac8e6605.svg\";\n;// ./node_modules/date-fns/constants.js\n/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nconst daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nconst daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nconst maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nconst minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nconst millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nconst millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nconst millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nconst millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nconst millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nconst minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nconst minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nconst minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nconst minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nconst monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nconst monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nconst quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nconst secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nconst secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nconst secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nconst secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nconst secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nconst secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nconst secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nconst constructFromSymbol = Symbol.for(\"constructDateFrom\");\n\n;// ./node_modules/date-fns/constructFrom.js\n\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nfunction constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructFrom = ((/* unused pure expression or super */ null && (constructFrom)));\n\n;// ./node_modules/date-fns/toDate.js\n\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_toDate = ((/* unused pure expression or super */ null && (toDate)));\n\n;// ./node_modules/date-fns/parseISO.js\n\n\n\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_parseISO = ((/* unused pure expression or super */ null && (parseISO)));\n\n;// ./node_modules/date-fns/constructNow.js\n\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nfunction constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructNow = ((/* unused pure expression or super */ null && (constructNow)));\n\n;// ./node_modules/date-fns/_lib/normalizeDates.js\n\n\nfunction normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n\n;// ./node_modules/date-fns/startOfDay.js\n\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfDay = ((/* unused pure expression or super */ null && (startOfDay)));\n\n;// ./node_modules/date-fns/isSameDay.js\n\n\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nfunction isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isSameDay = ((/* unused pure expression or super */ null && (isSameDay)));\n\n;// ./node_modules/date-fns/isToday.js\n\n\n\n\n/**\n * The {@link isToday} function options.\n */\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday(date, options) {\n  return isSameDay(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n  );\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isToday = ((/* unused pure expression or super */ null && (isToday)));\n\n;// ./node_modules/date-fns/_lib/defaultOptions.js\nlet defaultOptions = {};\n\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\nfunction setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n\n;// ./node_modules/date-fns/startOfWeek.js\n\n\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfWeek = ((/* unused pure expression or super */ null && (startOfWeek)));\n\n;// ./node_modules/date-fns/endOfWeek.js\n\n\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_endOfWeek = ((/* unused pure expression or super */ null && (endOfWeek)));\n\n;// ./node_modules/date-fns/isWithinInterval.js\n\n\n/**\n * The {@link isWithinInterval} function options.\n */\n\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * @param date - The date to check\n * @param interval - The interval to check\n * @param options - An object with options\n *\n * @returns The date is within the interval\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * // => true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * // => false\n *\n * @example\n * // For date equal to the interval start:\n * isWithinInterval(date, { start, end: date })\n * // => true\n *\n * @example\n * // For date equal to the interval end:\n * isWithinInterval(date, { start: date, end })\n * // => true\n */\nfunction isWithinInterval(date, interval, options) {\n  const time = +toDate(date, options?.in);\n  const [startTime, endTime] = [\n    +toDate(interval.start, options?.in),\n    +toDate(interval.end, options?.in),\n  ].sort((a, b) => a - b);\n\n  return time >= startTime && time <= endTime;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isWithinInterval = ((/* unused pure expression or super */ null && (isWithinInterval)));\n\n;// ./src/modules/dates.js\n\n\nfunction getTasksDueToday() {\n  let tasksDueToday = [];\n\n  projects.forEach((project) => {\n    project.tasks.forEach((task) => {\n      const dueDate = parseISO(task.dueDate);\n      if (isToday(dueDate)) {\n        tasksDueToday.push(task);\n      }\n    });\n  });\n\n  return tasksDueToday;\n}\n\nfunction getTasksDueThisWeek() {\n  let tasksDueThisWeek = [];\n\n  // Get the start and end of the current week\n  const startOfThisWeek = startOfWeek(new Date(), { weekStartsOn: 0 }); // 0 = Sunday, 1 = Monday, etc.\n  const endOfThisWeek = endOfWeek(new Date(), { weekStartsOn: 0 });\n\n  projects.forEach((project) => {\n    project.tasks.forEach((task) => {\n      const dueDate = parseISO(task.dueDate);\n\n      if (\n        isWithinInterval(dueDate, {\n          start: startOfThisWeek,\n          end: endOfThisWeek,\n        })\n      ) {\n        tasksDueThisWeek.push(task);\n      }\n    });\n  });\n\n  return tasksDueThisWeek;\n}\n\n;// ./src/modules/priority.js\n\n\nfunction getImportantTasks() {\n  let importantTasks = [];\n\n  projects.forEach((project) => {\n    project.tasks.forEach((task) => {\n      if (task.priority === 'high') {\n        importantTasks.push(task);\n      }\n    });\n  });\n  return importantTasks;\n}\n\n;// ./src/modules/content.js\n\n\n\n\n\n\n\n// Create task elements and populate content\nfunction createTaskItem(task, id) {\n  const taskItem = createElement('div', { class: 'taskItem' });\n  taskItem.dataset.id = id;\n\n  switch (task.priority) {\n    case 'low':\n      taskItem.style.backgroundColor = '#A8E6A3'; // Pastel green\n      taskItem.style.color = '#2F4F2F'; // Dark green for readability\n      break;\n    case 'medium':\n      taskItem.style.backgroundColor = '#FFD54F'; // Pastel yellow\n      taskItem.style.color = '#3E2A47'; // Dark brown for readability\n      break;\n    case 'high':\n      taskItem.style.backgroundColor = '#FF8A80'; // Pastel red\n      taskItem.style.color = '#660000'; // Dark red for readability\n      break;\n    default:\n      // Default case - uses CSS variables for background and text color\n      taskItem.style.backgroundColor = 'var(--primary-color)';\n      taskItem.style.color = 'var(--text-color)';\n      break;\n  }\n\n  const projectTitle = createElement('text', { id: 'projectTitle' });\n  projectTitle.textContent = task.projectName;\n  taskItem.appendChild(projectTitle);\n\n  const elements = [\n    { id: 'taskItemTitle', label: 'Task', value: task.title },\n    { id: 'taskItemDesc', label: 'Description', value: task.desc },\n    { id: 'taskItemDueDate', label: 'Due Date', value: task.dueDate },\n    { id: 'taskItemPriority', label: 'Priority', value: task.priority },\n  ];\n\n  elements.forEach(({ id, label, value }) => {\n    const element = createElement('div', { id });\n    if (!value || value === '') {\n      value = 'None provided.';\n    }\n    element.textContent = `${label}: ${value}`;\n    taskItem.appendChild(element);\n  });\n\n  const deleteTaskBtn = createElement('img', {\n    src: delete_svgrepo_com_namespaceObject,\n    class: 'delete-button',\n  });\n  deleteTaskBtn.addEventListener('click', () => {\n    handleDeleteTask(id);\n  });\n\n  const editTaskBtn = createElement('img', {\n    src: edit_svgrepo_com_namespaceObject,\n    class: 'edit-button',\n  });\n  editTaskBtn.addEventListener('click', () => {\n    handleEditTask(id);\n  });\n\n  const buttonContainer = createElement('div', { class: 'buttons-container' });\n  buttonContainer.appendChild(editTaskBtn);\n  buttonContainer.appendChild(deleteTaskBtn);\n  taskItem.appendChild(buttonContainer);\n\n  return taskItem;\n}\n\nfunction renderTasks() {\n  const tasksContainer = document.getElementById('tasksContainer');\n  const content = document.getElementById('content');\n  const existingh3 = content.querySelector('h3');\n  if (existingh3) content.removeChild(existingh3);\n  tasksContainer.innerHTML = '';\n\n  if (selectedProject) {\n    const projectToShow = getProject(selectedProject);\n\n    const newh3 = createElement('h3');\n    newh3.textContent = `${selectedProject} Tasks`;\n    content.insertBefore(newh3, content.firstChild);\n\n    projectToShow.tasks.forEach((task, index) => {\n      const taskId = `${selectedProject}-${index}`;\n      const taskItem = createTaskItem(task, taskId);\n      tasksContainer.appendChild(taskItem);\n    });\n  } else {\n    alert('No project selected. Please select a project.');\n  }\n}\n\nfunction renderAllTasks() {\n  const tasksContainer = document.getElementById('tasksContainer');\n  const content = document.getElementById('content');\n  const existingh3 = content.querySelector('h3');\n  if (existingh3) content.removeChild(existingh3);\n  tasksContainer.innerHTML = '';\n\n  const newh3 = createElement('h3');\n  newh3.textContent = `All tasks`;\n  content.insertBefore(newh3, content.firstChild);\n\n  projects.forEach((project) => {\n    project.tasks.forEach((task, index) => {\n      const taskId = `${project.name}-${index}`;\n      const taskItem = createTaskItem(task, taskId);\n      tasksContainer.appendChild(taskItem);\n    });\n  });\n}\n\nfunction renderTasksDueToday() {\n  const tasksContainer = document.getElementById('tasksContainer');\n  const content = document.getElementById('content');\n  const existingh3 = content.querySelector('h3');\n  if (existingh3) content.removeChild(existingh3);\n  tasksContainer.innerHTML = '';\n\n  const newh3 = createElement('h3');\n  newh3.textContent = `Tasks due today`;\n  content.insertBefore(newh3, content.firstChild);\n\n  const tasksDueToday = getTasksDueToday();\n\n  tasksDueToday.forEach((task, index) => {\n    const taskId = `${task.projectName}-${index}`;\n    const taskItem = createTaskItem(task, taskId);\n    tasksContainer.appendChild(taskItem);\n  });\n}\n\nfunction renderTasksDueThisWeek() {\n  const tasksContainer = document.getElementById('tasksContainer');\n  const content = document.getElementById('content');\n  const existingh3 = content.querySelector('h3');\n  if (existingh3) content.removeChild(existingh3);\n  tasksContainer.innerHTML = '';\n\n  const newh3 = createElement('h3');\n  newh3.textContent = `Tasks due this week`;\n  content.insertBefore(newh3, content.firstChild);\n\n  const tasksDueThisWeek = getTasksDueThisWeek();\n\n  tasksDueThisWeek.forEach((task, index) => {\n    const taskId = `${task.projectName}-${index}`;\n    const taskItem = createTaskItem(task, taskId);\n    tasksContainer.appendChild(taskItem);\n  });\n}\n\nfunction renderImportantTasks() {\n  const tasksContainer = document.getElementById('tasksContainer');\n  const content = document.getElementById('content');\n  const existingh3 = content.querySelector('h3');\n  if (existingh3) content.removeChild(existingh3);\n  tasksContainer.innerHTML = '';\n\n  const newh3 = createElement('h3');\n  newh3.textContent = `Tasks with High priority`;\n  content.insertBefore(newh3, content.firstChild);\n\n  const importantTasks = getImportantTasks();\n\n  importantTasks.forEach((task, index) => {\n    const taskId = `${task.projectName}-${index}`;\n    const taskItem = createTaskItem(task, taskId);\n    tasksContainer.appendChild(taskItem);\n  });\n}\n\nfunction handleDeleteTask(taskId) {\n  const [projectName, taskIndex] = taskId.split('-');\n  const project = projects.find((proj) => proj.name === projectName);\n\n  if (project) {\n    project.tasks.splice(taskIndex, 1);\n  } else {\n    alert(`Project '${projectName}' not found`);\n  }\n\n  if (selectedProject) {\n    if (selectedProject === projectName) {\n      renderTasks();\n    } else {\n      console.log(\n        `Selected project '${selectedProject}' does not match deleted task's project '${projectName}'.`,\n      );\n    }\n  } else {\n    renderAllTasks();\n  }\n}\n\nfunction handleEditTask(taskId) {\n  const [projectName, taskIndex] = taskId.split('-');\n  const project = projects.find((proj) => proj.name === projectName);\n  const task = project.tasks[taskIndex]; // Assuming tasks is an array\n\n  // Create form and populate with existing task values\n  const form = createTaskForm();\n\n  const titleInput = form.querySelector('#title');\n  const descInput = form.querySelector('#desc');\n  const dueDateInput = form.querySelector('#dueDate');\n  const prioritySelect = form.querySelector('#priority');\n\n  titleInput.value = task.title;\n  descInput.value = task.desc;\n  dueDateInput.value = task.dueDate;\n  prioritySelect.value = task.priority;\n\n  // Create overlay and show form\n  const overlay = createOverlay();\n  document.body.appendChild(overlay);\n  document.body.appendChild(form);\n  showForm(form, overlay);\n\n  // Handle form submission to update task\n  form.addEventListener('submit', (e) => {\n    e.preventDefault(); // Prevent form submission\n\n    const updatedValues = getFormValues(form);\n    task.title = updatedValues.taskTitle;\n    task.desc = updatedValues.taskDesc;\n    task.dueDate = updatedValues.taskDueDate;\n    task.priority = updatedValues.taskPriority;\n\n    // You can update your project/task state here (e.g., rerender UI or save to backend)\n    hideForm(form, overlay);\n    if (selectedProject === null) {\n      renderAllTasks();\n    } else {\n      renderTasks();\n    }\n  });\n\n  // Close button listener (optional)\n  const closeButton = form.querySelector('#close-button');\n  closeButton.addEventListener('click', () => {\n    hideForm(form, overlay);\n  });\n}\n\n;// ./src/assets/close-circle-svgrepo-com.svg\nconst close_circle_svgrepo_com_namespaceObject = __webpack_require__.p + \"5dd0a67532754cd71e51.svg\";\n;// ./src/modules/addTask.js\n\n\n\n\n// creates an element of type, with optional attributes as an object\nfunction createElement(type, attributes = {}) {\n  const element = document.createElement(type);\n  Object.keys(attributes).forEach((key) => {\n    element.setAttribute(key, attributes[key]);\n  });\n  return element;\n}\n\n// creates an input\nfunction createInput(id, type, placeholder, required = false) {\n  const input = createElement('input', { id, name: id, type, placeholder });\n  if (required) input.required = 'true';\n  return input;\n}\n\n// creates label partner element for an element, used in createForm() with createInput() to make input-label pairs\nfunction createLabel(forElement, textContent) {\n  const label = createElement('label', { for: forElement });\n  label.textContent = textContent;\n  return label;\n}\n\n// creates priority dropdown menu for task form\nfunction createPrioritySelect() {\n  const select = createElement('select', { id: 'priority', name: 'priority' });\n  const options = ['None', 'Low', 'Medium', 'High'];\n  options.forEach((option) => {\n    const optionElement = createElement('option', {\n      value: option.toLowerCase(),\n    });\n    optionElement.textContent = option;\n    select.appendChild(optionElement);\n  });\n  return select;\n}\n\n// creates a form with task fields to fill out\nfunction createTaskForm() {\n  const form = createElement('form', { id: 'form' });\n\n  const closeBtn = createElement('img', {\n    src: close_circle_svgrepo_com_namespaceObject,\n    id: 'close-button',\n  });\n\n  const titleLabel = createLabel('title', 'Title: ');\n  const titleInput = createInput('title', 'text', 'Enter a title', true); // title is required\n\n  const descLabel = createLabel('desc', 'Description: ');\n  const descInput = createInput('desc', 'text', 'Enter a description');\n\n  const dueDateLabel = createLabel('dueDate', 'Due date: ');\n  const dueDateInput = createInput('dueDate', 'date', 'Enter a due-date', true); // due date is required\n\n  const priorityLabel = createLabel('priority', 'Priority: ');\n  const prioritySelect = createPrioritySelect();\n\n  const submitButton = createElement('button', { type: 'submit' });\n  submitButton.textContent = 'Submit';\n\n  titleInput.addEventListener('input', () => {\n    if (titleInput.value.length > 25) {\n      titleInput.value = titleInput.value.slice(0, 25); // Trim input if it exceeds 25 characters\n    }\n  });\n\n  descInput.addEventListener('input', () => {\n    if (descInput.value.length > 75) {\n      descInput.value = descInput.value.slice(0, 75); // Trim input if it exceeds 75 characters\n    }\n  });\n\n  form.append(\n    closeBtn,\n    titleLabel,\n    titleInput,\n    descLabel,\n    descInput,\n    dueDateLabel,\n    dueDateInput,\n    priorityLabel,\n    prioritySelect,\n    submitButton,\n  );\n\n  return form;\n}\n\nfunction createOverlay() {\n  return createElement('div', { id: 'popup-overlay' });\n}\n\n// changes form.style from 'none' so it displays itself\nfunction showForm(form, overlay) {\n  form.style.display = 'flex';\n  form.style.flexDirection = 'column';\n  overlay.style.display = 'block';\n  setTimeout(() => {\n    form.style.opacity = '1';\n    overlay.style.opacity = '1';\n  }, 10);\n}\n\nfunction hideForm(form, overlay) {\n  form.style.opacity = '0';\n  setTimeout(() => {\n    form.style.display = 'none';\n    overlay.style.display = 'none';\n  }, 300);\n}\n\nfunction getFormValues(form) {\n  const taskTitle = form.querySelector('#title');\n  const taskDesc = form.querySelector('#desc');\n  const taskDueDate = form.querySelector('#dueDate');\n  const taskPriority = form.querySelector('#priority');\n\n  return {\n    taskTitle: taskTitle.value,\n    taskDesc: taskDesc.value,\n    taskDueDate: taskDueDate.value,\n    taskPriority: taskPriority.value,\n  };\n}\n\nfunction createTask(title, desc, dueDate, priority) {\n  return {\n    title: title,\n    desc: desc,\n    dueDate: dueDate,\n    priority: priority,\n    projectName: selectedProject,\n  };\n}\n\nfunction printTaskList(project) {\n  console.log(`Tasks for project: ${project.name}`);\n  project.tasks.forEach((task) => {\n    console.log(task);\n  });\n}\n\nfunction toggleAddTaskButton() {\n  const addTaskBtn = document.getElementById('addTaskBtn');\n  if (selectedProject) {\n    addTaskBtn.disabled = false;\n    addTaskBtn.classList.remove('disabled');\n  } else {\n    addTaskBtn.disabled = true;\n    addTaskBtn.classList.add('disabled');\n  }\n}\n\nfunction addTaskFormHandler() {\n  const form = createTaskForm();\n  const overlay = createOverlay();\n\n  const content = document.getElementById('content');\n  const addTaskBtn = document.getElementById('addTaskBtn');\n\n  const formSubmitBtn = form.querySelector('button');\n  const closeBtn = form.querySelector('#close-button');\n\n  addTaskBtn.addEventListener('click', () => showForm(form, overlay));\n  formSubmitBtn.addEventListener('click', (event) => {\n    const formValues = getFormValues(form);\n\n    if (\n      formValues &&\n      formValues.taskTitle.trim() !== '' &&\n      formValues.taskDueDate.trim() !== ''\n    ) {\n      if (formValues.taskTitle.length > 25) {\n        alert('Task title must be 25 characters or less.');\n        return;\n      }\n      if (formValues.taskDesc.length > 75) {\n        alert('Task description must be 75 characters or less.');\n        return;\n      }\n      event.preventDefault();\n      hideForm(form, overlay);\n\n      form.querySelector('#title').value = '';\n      form.querySelector('#desc').value = '';\n      form.querySelector('#dueDate').value = '';\n      form.querySelector('#priority').value = 'none';\n\n      addTasktoProject(\n        selectedProject,\n        createTask(\n          formValues.taskTitle,\n          formValues.taskDesc,\n          formValues.taskDueDate,\n          formValues.taskPriority,\n        ),\n      );\n      printTaskList(getProject(selectedProject));\n      renderTasks();\n    }\n  });\n\n  closeBtn.addEventListener('click', () => {\n    hideForm(form, overlay);\n\n    form.querySelector('#title').value = '';\n    form.querySelector('#desc').value = '';\n    form.querySelector('#dueDate').value = '';\n    form.querySelector('#priority').value = 'none';\n  });\n\n  // appends the overlay with the form to content, by default its invisible\n  content.append(form, overlay);\n}\n\n;// ./src/assets/nuclear-bomb-svgrepo-com.svg\nconst nuclear_bomb_svgrepo_com_namespaceObject = __webpack_require__.p + \"404df4c353dc7f288dcb.svg\";\n;// ./src/assets/theme-light-dark(1).svg\nconst theme_light_dark_1_namespaceObject = __webpack_require__.p + \"1c3900177461bf58becc.svg\";\n;// ./src/modules/localStorage.js\n\n\n\n\nfunction initializeProjects() {\n  const storedProjects = localStorage.getItem('projects');\n  if (!storedProjects || JSON.parse(storedProjects).length === 0) {\n    // Add a default project\n    const defaultProject = Project(1, 'Unlisted');\n    projects.push(defaultProject);\n    localStorage.setItem('projects', JSON.stringify(projects));\n  } else {\n    // Clear the current array and populate it with stored projects\n    const loadedProjects = JSON.parse(storedProjects);\n    projects.length = 0;\n    projects.push(...loadedProjects);\n    toggleAddTaskButton();\n    renderAllTasks();\n  }\n}\n\nfunction saveProjectsToStorage() {\n  localStorage.setItem('projects', JSON.stringify(projects));\n}\n\nfunction createConfirmationForm() {\n  // Create the overlay and form container\n  const overlay = createOverlay();\n  const form = createElement('form', { id: 'confirmation-form' });\n\n  // Create the description paragraph\n  const description = createElement('p');\n  description.textContent =\n    'This action will reset all projects and tasks. Are you sure you want to continue?';\n\n  // Create the continue button\n  const continueButton = createElement('button', { type: 'submit' });\n  continueButton.textContent = 'Continue';\n  continueButton.addEventListener('click', () => {\n    // Handle the action (resetting projects and tasks or other logic)\n    localStorage.clear();\n    hideForm(form, overlay); // Hide the form after confirmation\n  });\n\n  // Create the cancel button (optional, for user to cancel the action)\n  const cancelButton = createElement('button', { type: 'submit' });\n  cancelButton.textContent = 'Cancel';\n  cancelButton.addEventListener('click', () => {\n    hideForm(form, overlay); // Just hide the form without doing anything\n  });\n\n  // Append elements to the form\n  form.appendChild(description);\n  form.appendChild(continueButton);\n  form.appendChild(cancelButton);\n\n  // Append the form and overlay to the body\n  document.body.appendChild(overlay);\n  document.body.appendChild(form);\n\n  return form;\n}\n\n;// ./src/modules/sidebar.js\n\n\n\n\n\n\n\nfunction renderSidebar() {\n  const projectsSidebarContainer = document.getElementById(\n    'projectsSidebarContainer',\n  );\n  projectsSidebarContainer.innerHTML = ''; // Clear the sidebar before re-rendering\n\n  // Render each project with a container for the button and delete button\n  projects.forEach((project) => {\n    const sidebar = document.getElementById('sidebar');\n    const projectContainer = document.createElement('div');\n    projectContainer.classList.add('project-container');\n\n    // Create the project button\n    const button = document.createElement('button');\n    button.textContent = project.name;\n    button.addEventListener('click', () => {\n      setSelectedProject(project.name);\n      toggleAddTaskButton();\n      renderTasks();\n    });\n\n    const deleteBtn = document.createElement('img');\n    deleteBtn.src = delete_svgrepo_com_namespaceObject;\n    deleteBtn.classList.add('delete-project-button');\n    deleteBtn.style.display = 'none'; // Initially hidden\n\n    projectContainer.addEventListener('mouseenter', () => {\n      deleteBtn.style.display = 'block'; // Show delete button\n    });\n    projectContainer.addEventListener('mouseleave', () => {\n      deleteBtn.style.display = 'none'; // Hide delete button when not hovering\n    });\n\n    deleteBtn.addEventListener('click', () => {\n      removeProject(project.name);\n      projectsSidebarContainer.removeChild(projectContainer);\n      renderSidebar();\n      setSelectedProject(projects[0].name);\n      renderTasks();\n    });\n\n    // Append the project button and delete button to the container\n    projectContainer.appendChild(button);\n    projectContainer.appendChild(deleteBtn);\n\n    // Append the container to the sidebar\n    projectsSidebarContainer.appendChild(projectContainer);\n  });\n}\n\nfunction renderWebsiteButtons() {\n  const websiteButtonsContainer = createElement('div', {\n    class: 'website-buttons-container',\n  });\n  const changeThemeBtn = createElement('img', {\n    src: theme_light_dark_1_namespaceObject,\n    class: 'dark-light-theme-button',\n  });\n  const clearStorageBtn = createElement('img', {\n    src: nuclear_bomb_svgrepo_com_namespaceObject,\n    class: 'clear-storage-button',\n  });\n\n  websiteButtonsContainer.appendChild(changeThemeBtn);\n  websiteButtonsContainer.appendChild(clearStorageBtn);\n\n  document.body.classList.add('dark-theme');\n\n  changeThemeBtn.addEventListener('click', () => {\n    // Check if the body has 'dark-theme' class\n    if (document.body.classList.contains('dark-theme')) {\n      // If dark theme is applied, remove it and add light theme\n      document.body.classList.remove('dark-theme');\n      document.body.classList.add('light-theme');\n    } else {\n      // Otherwise, apply dark theme\n      document.body.classList.remove('light-theme');\n      document.body.classList.add('dark-theme');\n    }\n  });\n\n  clearStorageBtn.addEventListener('click', () => {\n    const confirmForm = createConfirmationForm();\n    const overlay = createOverlay();\n    showForm(confirmForm, overlay);\n  });\n\n  sidebar.appendChild(websiteButtonsContainer);\n}\n\nfunction sidebarButtonsHandler() {\n  const allTasksBtn = document.getElementById('allTasksBtn');\n  const tasksTodayBtn = document.getElementById('todayBtn');\n  const tasksWeekBtn = document.getElementById('thisWeekBtn');\n  const importantTasksBtn = document.getElementById('importantBtn');\n\n  allTasksBtn.addEventListener('click', () => {\n    setSelectedProject(null);\n    renderAllTasks();\n  });\n  tasksTodayBtn.addEventListener('click', () => {\n    setSelectedProject(null);\n    renderTasksDueToday();\n  });\n  tasksWeekBtn.addEventListener('click', () => {\n    setSelectedProject(null);\n    renderTasksDueThisWeek();\n  });\n  importantTasksBtn.addEventListener('click', () => {\n    setSelectedProject(null);\n    renderImportantTasks();\n  });\n}\n\n;// ./src/modules/projects.js\n\n\n\n\n\nlet projects = [];\nlet selectedProject = null;\n\nfunction setSelectedProject(projectName) {\n  selectedProject = projectName;\n  toggleAddTaskButton();\n}\nfunction Project(id, name) {\n  return {\n    id,\n    name,\n    tasks: [],\n  };\n}\n\nfunction getProject(projectName) {\n  return projects.find((project) => project.name === projectName) || false;\n}\n\nfunction removeProject(projectName) {\n  if (projects.length === 1) {\n    alert('Must have at least 1 project to add tasks to!');\n    return;\n  }\n\n  const index = projects.findIndex((project) => project.name === projectName);\n  if (index > -1) {\n    projects.splice(index, 1);\n    localStorage.setItem('projects', JSON.stringify(projects));\n  }\n}\n\nfunction createProjectForm() {\n  const form = createElement('form', { id: 'projectForm' });\n\n  const closeBtn = createElement('img', {\n    src: close_circle_svgrepo_com_namespaceObject,\n    id: 'close-button',\n  });\n\n  const projectLabel = createLabel('projectName', 'Project name: ');\n  const projectInput = createInput(\n    'projectName',\n    'text',\n    `Enter your project's name`,\n    true,\n  ); // title is required\n\n  const projectSubmitBtn = createElement('button', {\n    type: 'submit',\n    id: 'projectSubmitBtn',\n  });\n  projectSubmitBtn.textContent = 'Submit';\n\n  projectInput.addEventListener('input', () => {\n    if (projectInput.value.length > 20) {\n      projectInput.value = projectInput.value.slice(0, 20); // Trim input if it exceeds 25 characters\n    }\n  });\n\n  form.append(closeBtn, projectLabel, projectInput, projectSubmitBtn);\n\n  return form;\n}\n\nfunction addProject(name) {\n  name = name.trim();\n  if (projects.length >= 6) {\n    alert('Can only have 6 projects max!');\n  } else if (projects.find((proj) => proj.name === name)) {\n    alert('Project with the same name already exists!');\n  } else {\n    const newProject = Project(projects.length + 1, name);\n    setSelectedProject(name);\n    projects.push(newProject);\n    saveProjectsToStorage();\n  }\n}\n\nfunction addTasktoProject(projectName, task) {\n  const project = getProject(projectName);\n  if (project) {\n    // Check if a task with the same title already exists\n    const duplicateTask = project.tasks.find(\n      (existingTask) => existingTask.title === task.title,\n    );\n    if (duplicateTask) {\n      alert(\n        `A task with the name \"${task.title}\" already exists in the project \"${projectName}\".`,\n      );\n    } else {\n      project.tasks.push(task);\n      localStorage.setItem('projects', JSON.stringify(projects));\n    }\n  }\n}\n\nfunction getProjectName(form) {\n  const projectName = form.querySelector('#projectName');\n  return projectName.value;\n}\n\nfunction addProjectFormHandler() {\n  const form = createProjectForm();\n  const overlay = createOverlay();\n\n  const content = document.getElementById('content');\n  const addProjectBtn = document.getElementById('addProjectBtn');\n\n  const projectFormSubmitBtn = form.querySelector('#projectSubmitBtn');\n  const closeBtn = form.querySelector('#close-button');\n  const projectInput = form.querySelector('#projectName');\n\n  // Event listeners for showing and hiding the form\n  addProjectBtn.addEventListener('click', () => showForm(form, overlay));\n  projectFormSubmitBtn.addEventListener('click', (event) => {\n    event.preventDefault();\n    addProject(getProjectName(form));\n    renderSidebar();\n    hideForm(form, overlay);\n    projectInput.value = '';\n    renderTasks();\n  });\n  closeBtn.addEventListener('click', () => {\n    hideForm(form, overlay);\n    projectInput.value = '';\n  });\n\n  // appends the overlay with the form to content, by default its invisible\n  content.append(form, overlay);\n}\n\nfunction printProjects() {\n  return [...projects];\n}\n\n;// ./src/index.js\n\n\n\n\n\n\n\ninitializeProjects();\nsetSelectedProject(projects[0].name);\n\nif (!projects[0].tasks.length) {\n  addTasktoProject(\n    'Unlisted',\n    createTask('Example Task', \"I'm an example task!\", '02/27/2002', 'none'),\n  );\n  addTasktoProject(\n    'Unlisted',\n    createTask(\n      'Example Low Priority Task',\n      \"I'm an example task!\",\n      '02/27/2002',\n      'low',\n    ),\n  );\n  addTasktoProject(\n    'Unlisted',\n    createTask(\n      'Example Medium Priority Task',\n      \"I'm an example task!\",\n      '02/27/2002',\n      'medium',\n    ),\n  );\n  addTasktoProject(\n    'Unlisted',\n    createTask(\n      'Example High Priority Task',\n      \"I'm an example task!\",\n      '02/27/2002',\n      'high',\n    ),\n  );\n  renderTasks();\n}\n\nrenderTasks();\n\nrenderWebsiteButtons();\nrenderSidebar();\n\n// brings up form when addTaskBtn is pressed\naddTaskFormHandler();\n\n// brings up form when addProjectBtn is pressed\naddProjectFormHandler();\n\n// adds event handlers to sidebarButtons\nsidebarButtonsHandler();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///326\n")}},__webpack_module_cache__={};function __webpack_require__(n){var t=__webpack_module_cache__[n];if(void 0!==t)return t.exports;var e=__webpack_module_cache__[n]={id:n,exports:{}};return __webpack_modules__[n](e,e.exports,__webpack_require__),e.exports}__webpack_require__.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(n,t)=>{for(var e in t)__webpack_require__.o(t,e)&&!__webpack_require__.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),__webpack_require__.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;__webpack_require__.g.importScripts&&(n=__webpack_require__.g.location+"");var t=__webpack_require__.g.document;if(!n&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(n=t.currentScript.src),!n)){var e=t.getElementsByTagName("script");if(e.length)for(var c=e.length-1;c>-1&&(!n||!/^http(s?):/.test(n));)n=e[c--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=n})(),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(326)})();